---
import benefits from "../data-list/benefits.json";
import ContentWidth from "./ContentWidth.astro";
import {Icon} from "astro-icon/components"
---

<section id="benefits" class="py-20 bg-neutral-900 text-white">
    <ContentWidth>
        <h1 class="text-4xl sm:text-5xl md:text-6xl font-extrabold leading-tight mb-10">
            <span class="block bg-clip-text text-transparent bg-gradient-to-r from-yellow-400 to-yellow-200 text-center">Beneficios clave</span>
        </h1>
        <p class="mt-2 max-w-2xl text-lg text-neutral-300 mb-8">
            Lo que obtienes al trabajar con nosotros: velocidad, accesibilidad y resultados medibles.
        </p>

        <div class="grid gap-8 grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
            {
                benefits.map((benefit, i) => (
                            <article
                                    class="benefit-card group relative rounded-2xl bg-neutral-800 border border-yellow-700/10 p-6 shadow-[0_6px_24px_rgba(0,0,0,0.6)] transition-transform duration-300 will-change-transform transform hover:-translate-y-1 focus-within:-translate-y-1 outline-none"
                                    role="article"
                                    data-reveal
                                    style={`transition-delay: ${i * 70}ms`}
                                    aria-label={benefit.title}
                            >
                                <div aria-hidden="true" class="absolute -top-5 -right-5 w-24 h-24 rounded-full bg-gradient-to-br from-yellow-400/20 to-yellow-500/6 pointer-events-none"></div>

                                <div class="flex items-start gap-4">
                                    <div class="flex-none w-14 h-14 rounded-xl flex items-center justify-center bg-yellow-50/8 border border-yellow-600/10 text-yellow-400 text-2xl transition-transform group-hover:scale-105">
                                        <Icon name={benefit.icon} class="w-7 h-7" aria-hidden="true" />
                                    </div>

                                    <div class="flex-1">
                                        <h3 class="text-lg font-semibold text-white">{benefit.title}</h3>
                                        <p class="mt-2 text-lg text-neutral-300 leading-relaxed">{benefit.description}</p>
                                    </div>
                                </div>

                                <div class="mt-6 pt-4 border-t border-yellow-700/6 flex items-center justify-between">
                                    <span class="text-sm text-neutral-400">Aplicable en todos nuestros proyectos</span>
                                    <a href=#contact class="inline-flex items-center gap-2 text-lg font-medium text-yellow-300 hover:text-yellow-400 focus:outline-none focus:ring-2 focus:ring-yellow-400/30 rounded">
                                        MÃ¡s info
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                                        </svg>
                                    </a>
                                </div>
                            </article>
                    )
                )
            }
        </div>
    </ContentWidth>
    <style>
        :root {
            --header-height: var(--header-height, 0px);
        }

        [data-reveal] {
            transform: translateY(18px);
            opacity: 0;
            transition: transform .6s cubic-bezier(.2,.9,.3,1), opacity .6s cubic-bezier(.2,.9,.3,1);
        }
        .is-revealed [data-reveal] {
            transform: none;
            opacity: 1;
        }

        .benefit-card:focus {
            box-shadow: 0 8px 28px rgba(0,0,0,0.6), 0 0 0 4px rgba(252, 211, 77, 0.08);
            outline: none;
        }

        @media (max-width: 640px) {
            .benefit-card { padding: 1rem; }
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const section = document.getElementById('benefits');
            if (!section) return;
            if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
                section.classList.add('is-revealed');
                return;
            }

            const io = new IntersectionObserver((entries, obs) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        section.classList.add('is-revealed');
                        obs.disconnect();
                    }
                });
            }, { threshold: 0.12 });

            io.observe(section);
        });
    </script>
</section>
